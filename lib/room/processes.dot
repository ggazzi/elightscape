digraph {
    node [shape = rect;];
    RoomSupervisor [label = "Room.Supervisor";];
    Controller [label = "Room.Controller";];
    DynamicSupervisor;
    StateMachine [label = "Room.StateMachine";];
    Light [label = "Room.Light";];
    InputDriver [label = "InputDriver.?";style = dashed;];
    Hass [style = dashed;];

    subgraph {
        // Links
        edge [dir = none;];
        RoomSupervisor -> Controller;
        RoomSupervisor -> DynamicSupervisor;
        DynamicSupervisor -> StateMachine;
        DynamicSupervisor -> Light [headlabel = "*";];
        DynamicSupervisor -> InputDriver [headlabel = "*";];
    }

    subgraph {
        // Messages
        edge [style = dashed;];

        Controller -> StateMachine [label = ":event"; constraint = false;];
        StateMachine -> Controller [label = ":register";];
        StateMachine -> Controller [label = ":effect";];

        Controller -> Hass [label = "{:call_service, :scene}";];

        Light -> Controller [label = ":register";];
        Controller -> Light [label = "{:set_on, bool}";];
        Light -> Controller [label = "{:turned_on, bool}";];

        Light -> Hass [label = ":subscribe_trigger";];
        Hass -> Light [label = ":trigger";];
        Light -> Hass [label = "{:call_service, :light}";];

        InputDriver -> Controller [label = ":register";];
        InputDriver -> Controller [label = "{InputDriver, ...}";];
    }
}
